var lm,scene,Physijs=window.Physijs,use_custom_terrain=null,physijs=1;const loader=new THREE.TextureLoader;var ground_mesh,null_ground_mesh,msize,mnum,segs,rep,mtex,tmap,img_path,boundingBox_material,boundingBox_material_hm,models,wireframe,map=new Array;export function Terrain(_lm,_img_path,_scene,_msize,_mnum,_mtex,_rep,_segs,_tmap,_models,_wireframe,_use_custom_terrain){lm=_lm,img_path=_img_path,scene=_scene,msize=_msize,mnum=_mnum,mtex=_mtex,rep=_rep,segs=_segs,wireframe=_wireframe,use_custom_terrain=_use_custom_terrain,models=_models,void 0===Physijs&&(physijs=0),_wireframe?(boundingBox_material=new THREE.MeshBasicMaterial({color:43520,wireframe:!0}),boundingBox_material_hm=new THREE.MeshBasicMaterial({color:170,wireframe:!0})):(boundingBox_material=new THREE.MeshBasicMaterial({visible:!1,side:THREE.FrontSide}),boundingBox_material_hm=new THREE.MeshBasicMaterial({visible:!1,side:THREE.FrontSide})),(tmap=_tmap)||((tmap={}).set_xy=function(x,y){},tmap.get_x=function(){return 2},tmap.get_y=function(){return 2},tmap.set_ftype=function(){},tmap.get_ftype=function(){return 13}),ground_mesh=new Array;for(let m=0;m<25;m++)ground_mesh[m]=new Array;for(var files=new Array("","1","","","","","","","","","10","11","","13","",""),i=(new Array("","2","8","8","","","2","2","4","4","2","4","4","2","2","8"),0);i<files.length;i++)files[i]&&setup_materials(i,img_path+files[i],".jpg");for(i=0;i<files.length;i++)if(files[i])for(let m=0;m<25;m++)ground_mesh[m][i]=create_ground2(loader,i,img_path+files[i],".jpg",rep);let ground_material,groundGeometry=new THREE.PlaneBufferGeometry(msize,msize,segs,segs);groundGeometry.attributes.position.needsUpdate=!0,(ground_material=physijs?Physijs.createMaterial(boundingBox_material_hm,.8,.4):boundingBox_material_hm).side=THREE.DoubleSide,ground_material.map&&(ground_material.map.wrapS=ground_material.map.wrapT=THREE.RepeatWrapping),groundGeometry.computeFaceNormals(),groundGeometry.computeVertexNormals(),(null_ground_mesh=physijs?new Physijs.HeightfieldMesh(groundGeometry,ground_material,0):new THREE.Mesh(groundGeometry,groundMaterial)).position.y=-5,null_ground_mesh.rotation.x=-Math.PI/2,null_ground_mesh.receiveShadow=!0,set_layer(null_ground_mesh,1)};function make_gradient(lm,ground_no,_flags,kx,ky,m,soil){window.noise&&window.noise.seed((1e3*ky+kx)%65536);var terrein_undulation=new Array(1,3,20,15,1,1,3,90,100,35,50,90,35,100,100,100),warter_level=new Array(0,1,-1,-.9,0,0,1,.5,.7,.3,.6,.5,.3,1,1,1);let undulation=terrein_undulation[ground_no]/2*1,warterLV=warter_level[ground_no]/2,groundGeometry=ground_mesh[m][ground_no].geometry.attributes;for(let i=0;i<groundGeometry.position.count;i++){let d=2e3,val=5+(OctavePerlin(groundGeometry.position.getX(i)/d,groundGeometry.position.getY(i)/d,3,1.6,1)+warterLV)*undulation+soil/50;val||(val=0),groundGeometry.position.setZ(i,val)}groundGeometry.position.needsUpdate=!0,ground_mesh[m][ground_no].geometry.computeFaceNormals(),ground_mesh[m][ground_no].geometry.computeVertexNormals(),ground_mesh[m][ground_no].updateMatrix(),physijs&&ground_mesh[m][ground_no].sync()}function OctavePerlin(x,y,octaves,persistence,skip){let total=0,frequency=1,amplitude=1,maxValue=0;(!skip||skip<1)&&(skip=1);for(let i=0;i<octaves;i+=skip){window.noise&&(total+=window.noise.perlin2(x*frequency,y*frequency)*amplitude),maxValue+=amplitude;for(let j=0;j<skip;j++)amplitude*=persistence,frequency*=2}return total/maxValue}function y_sync(map,map_unit,src){let pos=0;src.children.length>5&&(pos=5);let mp=map.geometry.attributes.position,sp=src.children[pos].children[0].geometry.attributes.position,count=0,min=0,max=0,seg=segs;for(let i=0;i<mp.count;i++){let ix=msize/2+mp.getX(i),iy=msize/2+mp.getY(i);for(let z=0;z<seg;z++)for(let x=0;x<seg;x++){let r=100,p=z*seg+x;sp.getX(p)>max&&(max=sp.getX(p)),sp.getX(p)<min&&(min=sp.getX(p));let sx=parseInt(msize/2+sp.getX(p)/r),sy=parseInt(msize/2+sp.getY(p)/r),sz=sp.getZ(p);if(math.abs(sx-ix)<msize/segs/4*3&&math.abs(sy-iy)<msize/segs/4*3){count++,mp.setZ(i,sz/r-5-.3-4.7),x=99,z=99;break}}}console.log(count,mp.count,min,max,i)}function custom_terrain(map,m,models,unit,_dx,_dz){map[m].custom_terrain=1,map[m].rotation.set(.5*Math.PI,0,0),models.snow.rotation.set(-Math.PI/2,0,0),models.snow.rotation.set(-Math.PI/2,0,0),models.snow.position.set(0,0,0),y_sync(map[m],unit,models.snow);let model=models.snow.clone();map[m].add(model),map[m].name="ground",groundGeometry.attributes.position&&(groundGeometry.attributes.position.needsUpdate=!0),groundGeometry.computeFaceNormals(),groundGeometry.computeVertexNormals(),map[m].updateMatrix(),physijs&&map[m].sync(),sync_map_texture(map[m],_dx,_dz)}function get_model_unit(map){let groundGeometry,posX0=(groundGeometry=map.geometry?map.geometry.attributes:map.children[0].children[0].geometry.attributes).position.getX(0);return groundGeometry.position.getX(1)-posX0}function join_map(map,m,ground_no,_dx,_dz,unit){let count,num=parseInt(mnum/2),groundGeometry=map[m].geometry;map[m].ftype=ground_no,map[m].z_left=new Array,map[m].z_right=new Array,map[m].z_top=new Array,map[m].z_bottom=new Array,map[m].maxY=0,map[m].minY=0,map[m].maxX=0,map[m].minX=0;for(let i=0;i<groundGeometry.attributes.position.count;i++){let posX=groundGeometry.attributes.position.getX(i),posY=groundGeometry.attributes.position.getY(i);map[m].minX>posX&&(map[m].minX=posX),map[m].maxX<posX&&(map[m].maxX=posX),map[m].minY>posY&&(map[m].minY=posY),map[m].maxY<posY&&(map[m].maxY=posY)}for(let i=0;i<groundGeometry.attributes.position.count;i++){let posX=groundGeometry.attributes.position.getX(i),posY=groundGeometry.attributes.position.getY(i),posZ=groundGeometry.attributes.position.getZ(i);posX==map[m].minX&&(map[m].z_left[parseInt((map[m].maxY+posY)/unit)]=posZ),posX==map[m].maxX&&(map[m].z_right[parseInt((map[m].maxY+posY)/unit)]=posZ),posY==map[m].maxY&&(map[m].z_top[parseInt((map[m].maxX+posX)/unit)]=posZ),posY==map[m].minY&&(map[m].z_bottom[parseInt((map[m].maxX+posX)/unit)]=posZ)}map[m].dx=_dx,map[m].dy=_dz,map[m].position.x=_dx*msize,map[m].position.z=_dz*msize;let div=parseInt(segs/8);if(m>0)for(let i=0;i<groundGeometry.attributes.position.count;i++){let gap,posX=groundGeometry.attributes.position.getX(i),posY=groundGeometry.attributes.position.getY(i);groundGeometry.attributes.position.getZ(i);if(count=div,_dz>=1-num&&posY==map[m].maxY){let val=map[m-mnum].z_bottom[parseInt((map[m].maxX+posX)/unit)];map[m].z_top[parseInt((map[m].maxX+posX)/unit)]=val,posX==map[m].minX&&(map[m].z_left[parseInt((map[m].maxX+posX)/unit)]=val),posX==map[m].maxX&&(map[m].z_right[parseInt((map[m].maxX+posX)/unit)]=val);let gap=val;groundGeometry.attributes.position.setZ(i,val);for(let ii=0;ii<groundGeometry.attributes.position.count;ii++){let PX=groundGeometry.attributes.position.getX(ii),PY=groundGeometry.attributes.position.getY(ii);for(let j=1;j<=div;j++)if(PY==posY-unit*j&&PX==posX){let v=(groundGeometry.attributes.position.getZ(ii)*j+gap*(div-j))/(div+1);if(groundGeometry.attributes.position.setZ(ii,v),PX==map[m].maxX&&posY>0&&(map[m].z_right[parseInt((map[m].maxY+PY)/unit)]=v),0==--count)break}}}if(_dx>=1-num){if(posX==map[m].minX){let val=map[m-1].z_right[parseInt((map[m].maxY+posY)/unit)];map[m].z_left[parseInt((map[m].maxY+posY)/unit)]=val,gap=val,groundGeometry.attributes.position.setZ(i,val),posY==map[m].minY&&(map[m].z_bottom[parseInt((map[m].maxX+posX)/unit)]=val),posY==map[m].maxY&&(map[m].z_top[parseInt((map[m].maxX+posX)/unit)]=val)}if(posY<=map[m].maxY&&posY>=map[m].maxY-unit*div&&posX==map[m].minX){let v=map[m-1].z_right[(map[m].maxY+posY)/unit];groundGeometry.attributes.position.setZ(i,v)}if(count=div,posX==map[m].minX)for(let ii=0;ii<groundGeometry.attributes.position.count;ii++){let PX=groundGeometry.attributes.position.getX(ii),PY=groundGeometry.attributes.position.getY(ii);for(let j=1;j<=div;j++){if(PX==posX+unit*j&&PY==posY){let v=(groundGeometry.attributes.position.getZ(ii)*j+gap*(div-j))/(div+1);if(groundGeometry.attributes.position.setZ(ii,v),PY==map[m].minY&&(map[m].z_bottom[parseInt((map[m].maxX+PX)/unit)]=v),0==--count)break}if(_dz>=1-num&&PX==posX+unit*j&&PY==map[m].maxY){let v=map[m-mnum].z_bottom[j];groundGeometry.attributes.position.setZ(ii,v)}}}}}}Terrain.prototype.create=function(){_date||(_date=new Date),set_sky_color(_date)},Terrain.prototype.join_gradient=function(ftype,_kx,_ky){return _join_gradient(ftype,_kx,_ky)},Terrain.prototype.get_ftype=function(_x,_y){return tmap.get_ftype(_x,_y)},Terrain.prototype.remove_all=function(){for(let i=0;i<map.length;i++)map[i].used&&(scene.remove(map[i]),map[i].used=0)},Terrain.prototype.constructor=Terrain;var o4map_str="",o4map=new Array;function _join_gradient(ftype,_kx,_ky){var soil=0;if(lm&&(o4map_str=lm.obj("map").exec("get_3dmap",""))){var args=o4map_str.split(":");for(var i in args){o4map[i]=new Array;var data=args[i].split(",");for(var j in data)o4map[i][j]=Number(data[j])}}var m=0;tmap.set_xy(2,2),tmap.set_ftype(ftype,2,2);let num=parseInt(mnum/2);for(let _dz=-1*num;_dz<=1*num;_dz++)for(let _dx=-1*num;_dx<=1*num;_dx++){let kx=tmap.get_x()+_dx,ky=tmap.get_y()+_dz;var ground_no=11;if(0==_dz&&0==_dx&&(ground_no=tmap.get_ftype(kx,ky)),_dz==-1*num&&_dx==-1*num&&(ground_no=10),_dz==-1*num&&_dx==-1*num+1&&(ground_no=10),lm&&o4map_str)for(var i in o4map)if(o4map[i][0]==_kx+_dx&&o4map[i][1]==_ky-_dz){kx=_kx+_dx,ky=_ky-_dz,ground_no=o4map[i][2],soil=o4map[i][3],tmap.set_ftype(ground_no,2+_dx,2+_dz);break}let groundGeometry,custom_terrain=0;use_custom_terrain&&_dz==use_custom_terrain.x&&_dx==use_custom_terrain.y&&models.snow?(custom_terrain=1,physijs&&(map[m]=null_ground_mesh.physijs_clone(),groundGeometry=map[m].geometry)):(make_gradient(lm,ground_no,{fire:0},kx,ky,m,soil),map[m]=physijs?ground_mesh[m][ground_no].physijs_clone():ground_mesh[m][ground_no].clone(),groundGeometry=map[m].geometry),map[m].traverse(node=>{node.isMesh&&(node.material=node.material.clone())});let unit=get_model_unit(map[m]);use_custom_terrain&&_dz==use_custom_terrain.x&&_dx==use_custom_terrain.y&&models.snow&&(custom_terrain=1)(map,m,models,unit,_dx,_dz),join_map(map,m,ground_no,_dx,_dz,unit),groundGeometry.attributes.position.needsUpdate=!0,groundGeometry.computeFaceNormals(),groundGeometry.computeVertexNormals(),map[m].updateMatrix(),physijs&&map[m].sync&&map[m].sync(),sync_map_texture(map[m],_dx,_dz),scene.add(map[m]),map[m].used=1,m++}}var material=new Array;function setup_materials(i,_file_name,_file_type){let path=_file_name+_file_type;var groundTexture1=loader.load(path);material[i]=create_texture_material(i,groundTexture1,_file_name,_file_type)}function create_ground2(loader,index,_file_name,_file_type,rep){var mesh,groundGeometry=new THREE.PlaneBufferGeometry(msize,msize,segs,segs);if(groundGeometry.attributes.position.needsUpdate=!0,physijs){let ground_material=Physijs.createMaterial(boundingBox_material_hm,.8,.4);ground_material.map&&(ground_material.map.wrapS=ground_material.map.wrapT=THREE.RepeatWrapping),groundGeometry.computeFaceNormals(),groundGeometry.computeVertexNormals(),mesh=new Physijs.HeightfieldMesh(groundGeometry,ground_material,0)}else mesh=new THREE.Mesh(groundGeometry,boundingBox_material_hm);mesh.name="ground",mesh.position.y=-5,mesh.rotation.x=-Math.PI/2,set_layer(mesh,1),(groundGeometry=new THREE.PlaneBufferGeometry(msize/mtex,msize/mtex,segs/mtex,segs/mtex)).attributes.position.needsUpdate=!0;let num=parseInt(mtex/2);for(let _dy=-1*num;_dy<1*num;_dy++)for(let _dx=-1*num;_dx<1*num;_dx++){let groundMaterial=material[index];Math.random()<.2&&(groundMaterial=material[10]),wireframe&&(groundMaterial=boundingBox_material);let texture=new THREE.Mesh(groundGeometry.clone(),groundMaterial);texture.name="ground_"+_dx+"_"+_dy,texture.position.x=_dx*(msize/mtex)+msize/mtex/2,texture.position.y=_dy*(msize/mtex)+msize/mtex/2,mesh.add(texture)}return mesh}function sync_map_texture(_map,_dx,_dz){parseInt(mtex/2);let center=segs/2,h=new Array;for(let i=0;i<=segs;i++)h[i]=new Array;let pos=_map.geometry.attributes.position,d=pos.array[0]-pos.array[3];d<0&&(d*=-1);for(let p=0;p<pos.count;p++)h[parseInt(center+pos.getX(p)/d)][parseInt(center+pos.getY(p)/d)]=pos.getZ(p);for(let c=0;c<_map.children.length;c++){let mesh=_map.children[c];var args=mesh.name.split("_");let x=Number(args[1]),y=Number(args[2]),mpos=mesh.geometry.attributes.position,d2=mpos.array[0]-mpos.array[3];d2<0&&(d2*=-1);let n=parseInt(segs/mtex);for(let p=0;p<mpos.count;p++){let new_h=h[parseInt(center+x*n+n/2+mpos.getX(p)/d2)][parseInt(center+y*n+n/2+mpos.getY(p)/d2)];new_h?mpos.setZ(p,new_h):console.log("could not get height.",x,y,_dx,_dz,new_h)}}}function create_texture_material(index,groundTexture,_file_name,_file_type){let groundMaterial;if(groundTexture.wrapS=groundTexture.wrapT=THREE.RepeatWrapping,groundTexture.repeat.set(rep/mtex,rep/mtex),groundTexture.anisotropy=16,groundTexture.encoding=THREE.sRGBEncoding,wireframe)groundMaterial=boundingBox_material;else if(10==index||11==index||13==index){let vec2=.1;var normalTexture=loader.load(_file_name+"_N"+_file_type+"?8");(groundMaterial=new THREE.MeshStandardMaterial({roughness:1,map:groundTexture,normalMap:normalTexture})).normalScale.set(vec2,vec2)}else groundMaterial=new THREE.MeshStandardMaterial({map:groundTexture,roughness:1});return groundMaterial.side=THREE.DoubleSide,groundMaterial}function set_layer(_model,_layer){_model.layers.set(_layer);for(let i=0;i<_model.children.length;i++)set_layer(_model.children[i],_layer)}function is_low_quality(lm){return lm&&(lm.get_mobile_mode()||lm.global_get_permission("load","low"))?1:1==window.createjs.Touch.isSupported()?1:0}
